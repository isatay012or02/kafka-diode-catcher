version: '3'
services:
  zookeeper_catcher:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2182:2182"
    networks:
      - kafka_net

  kafka_catcher:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper_catcher
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper_catcher:2182
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_catcher:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    command: "sh -c 'kafka-topics.sh --create --topic LogsAndMetrics --bootstrap-server kafka_catcher:9093 --replication-factor 1 --partitions 1; sleep 300'"
    networks:
      - kafka_net

  topic_creator:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka_caster
    networks:
      - kafka_net
    entrypoint: /bin/sh
    command: -c "
      echo 'Waiting for Kafka to be ready...';
      while ! nc -z kafka_catcher 9093; do
      sleep 1;
      done;
      echo 'Kafka is ready. Creating topics...';
      kafka-topics --create --topic LogsAndMetrics --bootstrap-server kafka_catcher:9093 --replication-factor 1 --partitions 1;
      echo 'Topics created.';
      sleep 10;"

  kafka-ui-catcher:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui-catcher
    ports:
      - 8092:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local-catcher
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka_catcher:9093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper_catcher:2182
    networks:
      - kafka_net

  catcher:
    build:
      context: https://github.com/isatay012or02/kafka-diode-catcher.git
      dockerfile: Dockerfile
    environment:
      UDP_IP: "127.0.0.1"
      UDP_PORT: 9999
      ENABLE_HASH: "true"
      KAFKA_LOGGER_TOPIC: "SyslogProducer"
    networks:
      - kafka_net
    restart: always

networks:
  kafka_net:
    driver: bridge
